name: Propagate changes to data projects

on: 
  push:

jobs:
  identify-and-print:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check for project_name in push payload
        run: |
          commit_message="${{ github.event.head_commit.message }}"
          # Check if the commit message contains the keyword 'project_name='
          if [[ "$commit_message" == *"project_name="* ]]; then
            # Extract the project_name from the commit message
            project_name=$(echo "$commit_message" | sed -n 's/.*project_name=\([^ ]*\).*/\1/p')
            echo "Project Name from commit message: $project_name"
            echo "::set-output name=project_name::$project_name"
          else
            echo "No project_name found in commit message."
            exit 1
        id: check_project_name

  dispatch:
    needs: identify-and-print
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Set up repository dispatch parameters and dispatch events
        run: |
          project_name="${{ steps.check_project_name.outputs.project_name }}"
          origin_repo="${{ github.repository }}"
          repositories=()

          # Determine the repositories to update based on the origin repository and project_name
          if [[ "$origin_repo" == "ECC-BFMC/BrainProject" && "$project_name" == "Brain" ]]; then
            repositories=("ECC-BFMC/CompetitionPCing")
          elif [[ "$origin_repo" == "ECC-BFMC/CompetitionPCing" && "$project_name" == "CompetitionPCing" ]]; then
            repositories=("ECC-BFMC/BrainProject")
          else
            echo "Unknown origin repository or project_name: $origin_repo, $project_name"
            exit 1
          fi

          # Uncomment the following block to perform the actual dispatch
          # for repo in "${repositories[@]}"; do
          #   echo "Dispatching event to repository: $repo"
          #   gh api repos/"$repo"/dispatches \
          #     -f event_type=update-subtree-$project_name \
          #     -f client_payload='{}' \
          #     -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}"
          # done

          # Print the dispatch information
          for repo in "${repositories[@]}"; do
            echo "Prepared to dispatch event to repository: $repo"
            echo "Event type: update-subtree-$project_name"
            echo "Would use token: ${{ secrets.REPO_ACCESS_TOKEN }}"
          done
